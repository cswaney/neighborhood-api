service:
  name: neighborhood-api

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, 'staging'}
  region: ${opt:region, 'us-east-1'}
  environment:
    EVENTS_TABLE: Events-${self:provider.stage}
    EVENT_LOCATION_ID_INDEX: EventLocationIdIndex
    ATTACHMENTS_S3_BUCKET: neighborhood-api-attachments-${self:provider.stage}

functions:
  # Auth:
  #   handler: src/lambda/auth/auth0Authorizer.handler
  GetEvents:
    handler: src/lambda/http/getEvents.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.EVENTS_TABLE}
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.EVENTS_TABLE}/index/${self:provider.environment.EVENT_LOCATION_ID_INDEX}
    events:
      - http:
          method: get
          path: events/location/{locationId}
          # authorizer: Auth
          cors: true
  GetUserEvents:
    handler: src/lambda/http/getUserEvents.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.EVENTS_TABLE}
    events:
      - http:
          method: get
          path: events/user/{userId}
          # authorizer: Auth
          cors: true

resources:
  Resources:
    # DynamoDB
    EventsDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.EVENTS_TABLE}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
          - AttributeName: locationId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: createdAt
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.EVENT_LOCATION_ID_INDEX}
            KeySchema:
            - AttributeName: locationId
              KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST